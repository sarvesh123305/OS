#include <linux/kernel.h>
#include <linux/syscalls.h>
#include <linux/sched.h>

SYSCALL_DEFINE1(printPID, int, pid)
{
    struct task_struct *task;
    struct task_struct *parentTask;
    char buffer[256];

    printk("Ancestry of PID %d is :\n",pid);

    task = pid_task(find_vpid(pid), PIDTYPE_PID);
    if (!task) {
        printk("PID %d not found\n", pid);
        return -EINVAL;
    }

    while (task && task->pid != 0) {
        printk("PID: %d ", task->pid);
	parentTask = task->real_parent;
        if (!parentTask) {
            printk("Parent not found for PID %d\n", task->pid);
            break;
        }
        task = parentTask;
    }

    return 0;
}
